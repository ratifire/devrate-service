
#Use when you want to see logs (DB, web requests/responses, Spring Boot operations, MVC)
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.boot=DEBUG
#logging.level.org.springframework.web.servlet=DEBUG

#SMTP config
spring.mail.host=email-smtp.eu-north-1.amazonaws.com
spring.mail.username=<AWS_SES_ACCESS_KEY_ID>
spring.mail.password=<AWS_SES_SECRET_ACCESS_KEY>
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
from.email.address=no-reply@ratifire.org

# Logging
logging.level.org.springframework.web.socket.config.WebSocketMessageBrokerStats=ERROR
logging.level.org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration=OFF
spring.main.banner-mode=off

#Initial Data SQL config
spring.sql.init.mode=always
spring.sql.init.data-locations=classpath:dataE2E.sql

#Zoom
zoom.oauth2.issuer=${ZOOM_ISSUER_URL:https://zoom.us/oauth}
zoom.oauth2.client-id=<ZOOM_CLIENT_ID>
zoom.oauth2.client-secret=<ZOOM_CLIENT_SECRET>
zoom.oauth2.account-id=<ZOOM_ACCOUNT_ID>
zoom.oauth2.api.url=${ZOOM_API_URL:https://api.zoom.us/v2}

zoom.secret=<ZOOM_SECRET>

server.servlet.session.cookie.domain=<DOMAIN>
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=None

cors.allowed.origins=https://skillzzy.com,wss://skillzzy.com,ws://skillzzy.com,wss://server.skillzzy.com,ws://server.skillzzy.com,https://dev.skillzzy.com,wss://dev.skillzzy.com,ws://dev.skillzzy.com

# AWS Configuration
aws.accessKeyId=<AWS_ACCESS_KEY_ID>
aws.secretKey=<AWS_SECRET_ACCESS_KEY>
aws.region=<AWS_REGION>

# Cognito Configuration
spring.security.oauth2.client.registration.cognito.client-name=<REGISTRATION_COGNITO_CLIENT_NAME>
spring.security.oauth2.client.registration.cognito.client-id=<REGISTRATION_COGNITO_CLIENT_ID>
spring.security.oauth2.client.registration.cognito.client-secret=<REGISTRATION_COGNITO_CLIENT_SECRET>
spring.security.oauth2.client.registration.cognito.scope=<REGISTRATION_COGNITO_SCOPE>
spring.security.oauth2.client.provider.cognito.issuer-uri=<PROVIDER_COGNITO_ISSUER_URI>
spring.security.oauth2.client.provider.cognito.jwk-set-uri=<PROVIDER_COGNITO_JWK_SET_URI>
spring.security.oauth2.client.registration.cognito.domain=<REGISTRATION_COGNITO_DOMAIN>
spring.security.oauth2.client.registration.cognito.redirect-uri=<REGISTRATION_COGNITO_REDIRECT_URI>
spring.security.oauth2.client.registration.cognito.authorization-grant-type=<REGISTRATION_COGNITO_AUTHORIZATION_GRANT_TYPE>
spring.security.oauth2.client.registration.cognito.user-pool-id=<PROVIDER_COGNITO_USER_POOL_ID>

# Oauth2 Configuration
oauth2.state-secret=<OAUTH2_STATE_SECRET>
oauth2.state-lifeTime=3600000

# MiroTalk API
mirotalk.api.url=<AWS_MIROTALK_API_URL>
mirotalk.api.key=<AWS_MIROTALK_API_KEY>

# Matching service
matching-service.send-sqs-endpoint=participantQueueDev
matching-service.received-sqs-endpoint=matchedParticipantDev
