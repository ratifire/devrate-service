name: Destroy

on:
#  schedule:
#    - cron: '00 18 * * 1-5'
  workflow_dispatch:

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current branch name
        id: get_branch_name
        run: |
          # Extract branch name from GITHUB_REF
          BRANCH_NAME=$(echo "${GITHUB_REF}" | sed 's/refs\/heads\///')
          echo "Current branch: ${BRANCH_NAME}"
          # Save branch name to GitHub Actions environment variable
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Run destroy_service workflow
        id: destroy_service
        run: |
          gh workflow run Destroy_Service --ref ${{ env.BRANCH_NAME }}
          echo "Waiting for Destroy_Service to complete..."
          sleep 10
          RUN_ID=$(gh run list --workflow=Destroy_Service --json databaseId,status --limit 1 | jq -r '.[0] | select(.status == "in_progress" or .status == "queued").databaseId')
          if [ -z "$RUN_ID" ]; then
            echo "No in-progress run found. Skipping watch."
          else
            echo "Waiting for workflow run $RUN_ID to complete..."
              gh run watch $RUN_ID --exit-status --interval 15
          fi   

      - name: Run terraform_destroy workflow
        id: terraform_destroy
        if: steps.destroy_service.conclusion == 'success'
        run: |
          gh workflow run Terraform_destroy --ref ${{ env.BRANCH_NAME }}
          echo "Waiting for Terraform_destroy to complete..."
          sleep 10
          RUN_ID=$(gh run list --workflow=Terraform_destroy --json databaseId,status --limit 1 | jq -r '.[0] | select(.status == "in_progress" or .status == "queued").databaseId')
          if [ -z "$RUN_ID" ]; then
            echo "No in-progress run found. Skipping watch."
          else
            echo "Waiting for workflow run $RUN_ID to complete..."
              gh run watch $RUN_ID --exit-status --interval 15
          fi 
